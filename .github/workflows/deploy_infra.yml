name: Deploy App Infra

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  security-events: write
  actions: read

jobs:
  deploy-infra:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      S3_BACKEND: ${{secrets.S3_BACKEND_BUCKET }}
      DB_BACKEND: ${{ secrets.DYNAMODB_BACKEND_TABLE }}
      APP_NAME: ${{ secrets.EB_APP_NAME }}
      ENV_BLUE: ${{ secrets.EB_ENV_BLUE }}
      EB_ENV_GREEN: ${{ secrets.EB_ENV_GREEN }}
      APP_SOLUTION_BUCKET: ${{ secrets.SOLUTION_S3_BUCKET }}
      APP_SOLUTION_STACK: ${{ secrets.SOLUTION_STACK_VERSION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6  # Pin to a stable version

      - name: Terraform Init
        working-directory: infra/
        run: |
          terraform init \
            -input=false \
            -backend-config="region=${{ env.AWS_REGION }}" \
            -backend-config="bucket=${{ env.S3_BACKEND }}" \
            -backend-config="dynamodb_table=${{ env.DB_BACKEND }}" \
            -backend-config="key=terraform/terraform-app-infra.tfstate" \
            -backend-config="encrypt=true"

      - name: Terraform Validate
        working-directory: infra/
        run: terraform validate

      - name: Terraform Plan
        working-directory: infra/
        env:
          TF_VAR_region: ${{ env.AWS_REGION }}
          TF_VAR_eb_app_name: ${{ env.APP_NAME }}
          TF_VAR_s3_bucket_name: ${{ env.APP_SOLUTION_BUCKET }}
          TF_VAR_solution_stack: ${{ env.APP_SOLUTION_STACK }}
        run: terraform plan -input=false -out="plan"

      - name: Terraform Apply
        working-directory: infra/
        run: terraform apply -input=false "plan"
